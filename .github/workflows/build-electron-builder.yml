name: Build and Release with Electron Builder

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            command: npm run build:win
          - os: ubuntu-latest
            platform: linux
            arch: x64
            command: npm run build:linux
          - os: macos-latest
            platform: darwin
            arch: universal
            command: npm run build:mac
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: ${{ matrix.command }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}
          path: |
            dist/*.exe
            dist/*.dmg
            dist/*.zip
            dist/*.AppImage
            dist/*.deb
            dist/latest*.yml
          retention-days: 5

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Delete v0.0.1 release if present (for test/dev)
        if: github.ref_name == 'v0.0.1'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          TAG="v0.0.1"
          REPO="${{ github.repository }}"
          echo "Deleting release for $TAG if it exists..."
          gh release delete "$TAG" --repo "$REPO" --yes || true

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Move all files to dist root for release upload
        run: |
          find dist -type f \( -name "*.exe" -o -name "*.dmg" -o -name "*.zip" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.yml" \) -exec mv {} dist/ \;

      - name: List files in dist for debugging
        run: |
          echo "Listing all files in dist after moving:"
          ls -la dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.zip
            dist/*.AppImage
            dist/*.deb
            dist/latest*.yml
          draft: false
          prerelease: false

  cleanup:
    needs: release
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 0